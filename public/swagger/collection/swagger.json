{
    "swagger": "2.0",
    "info": {
        "description": "This is a flow swagger API documentation.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
        #swagger](http://swagger.io/irc/).  For this sample, you can use the api key
        `special-key` to test the authorization filters.",
        "version": "1.0.0",
        "title": "Negotium Swagger API Documentation",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "klaas@rikscss.co.za"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost",
    "basePath": "/api",
    "tags": [
        {
            "name": "user",
            "description": "All the user api endpoints are defined under this tag"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "User log in",
                "description": "Logs user into the system and returns a sanctum bearer token",
                "operationId": "loginUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user email address or username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The user password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example: successful operation",
                        "schema": {
                            "type": "object",
                            "example": {
                                "code": 200,
                                "message": "user logged in successfully",
                                "data": {
                                    "token": "7|LRs8YJRvlrCVTKL8Li0wr4EsqsFCQLbnRmu79giHf400e991"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Example: Invalid username/password supplied",
                        "schema": {
                            "type": object,
                            "example": {
                                "code": 401,
                                "message": "Example: Wrong email or password provided",
                                "errors": []
                            }
                        }
                    },
                    "422": {
                        "description": "Example: Invalid input supplied",
                        "schema": {
                            "type": object,
                            "example": {
                                "code": 422,
                                "message": "Input validation error",
                                "errors": {
                                    "email": [
                                        "The email field must be a valid email address."
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "User log out",
                "description": "Logs user out of the system",
                "operationId": "logoutUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example: successful operation",
                        "schema": {
                            "type": "object",
                            "example": {
                                "message": "user logged out successfully",
                                "data": []
                            }
                        }
                    },
                    "401": {
                        "description": "Example: Unauthorised access",
                        "schema": {
                            "type": object,
                            "example": {
                                "message": "Unauthenticated."
                            }
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "security": [ { "BearerAuth": [] } ],
                "responses": {
                    "200": {
                        "description": "Example: successful operation",
                        "schema": {
                            "type": "object",
                            "example": {
                                "code": 200,
                                "message": "user successfully created.",
                                "data": {
                                    "id": "9a925dfc-ed9c-4d13-8e4f-56a744ea2fa2"
                                },
                                "payload": {
                                    "first_name": "Themba",
                                    "last_name": "Mikes",
                                    "email": "tm@gmail.com",
                                    "avatar": null,
                                    "last_login_at": "2023-11-09T12:50:17.003Z",
                                    "last_login_ip": null,
                                    "password": "password",
                                    "created_at": "2023-11-09T12:50:17.003Z",
                                    "updated_at": "2023-11-09T12:50:17.003Z",
                                    "deleted_at": "2023-11-09T12:50:17.003Z"
                                },
                                "old_value": [],
                                "new_value": [],
                                "log_id": "9a925dfc-f1c2-4a09-8024-e7b1403a8091"
                            }
                        }
                    },
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "name": "Authorization",
            "in": "header",
            "type": "apiKey",
            "description": "Bearer token Authorization header"
        }
    },
    "security": [ { "BearerAuth": [] } ],
    "definitions": {
        "Success": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string",
                    format: "date-time"
                },
                "last_login_ip": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
